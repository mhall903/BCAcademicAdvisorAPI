
# NOTE: update this with your service name
service: bcadmin-api-test

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

custom:
  stage: ${opt:stage, self:provider.stage}
  tableName: ${self:custom.stage}-bcadmin
  tableTwo: ${self:custom.stage}-tableTwo

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-west-2
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  
  environment: 
    tableName: ${self:custom.tableName}
    # stripeSecretkey: ${env:STRIPE_SECRET_KEY}

  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      # Restrict to specific table
      Resource:
        - "Fn::GetAtt": [bcadmin, Arn]
      # Resource: "arn:aws:dynamodb:us-west-2:*:*"

functions:
  create:
    handler: create.main
    events:
      - http:
          path: bcadmin
          method: post
          cors: true
          authorizer: aws_iam
  get:
    handler: get.main
    events: 
      - http:
          path: quarter/{id}
          method: get
          cors: true
          authorizer: aws_iam
  list:
    handler: list.main
    events:
      - http:
          path: quarter
          method: get
          cors: true
          authorizer: aws_iam
  delete:
    handler: delete.main
    events:
      - http:
          path: quarter/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  update:
    handler: update.main
    events:
      - http:
          path: quarter/{id}
          method: put
          cors: true
          authorizer: aws_iam

resources:
  - ${file(resources/api-gateway-errors.yml)}
  - ${file(resources/dynamodb-table.yml)}
  - ${file(resources/s3-bucket.yml)}
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}